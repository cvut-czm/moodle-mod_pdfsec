<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * This is a one-line short description of the file.
 *
 * You can have a rather longer description of the file as well,
 * if you like, and it can span multiple lines.
 *
 * @package    xxxxxx
 * @category   xxxxxx
 * @copyright  2018 CVUT CZM, Jiri Fryc
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

defined('MOODLE_INTERNAL') || die();
require_once($CFG->libdir.'/filelib.php');
require_once("$CFG->libdir/resourcelib.php");
require_once($CFG->dirroot.'/repository/lib.php');

class mod_pdfsec_mod_form extends \mod_pdfsec\form\template_form {

    public function __construct($current, $section, $cm, $course) {
        parent::__construct($current, $section, $cm, $course);
        $this->_form->setDefaults($this->set_global_defaults([]));
    }

    function data_preprocessing(&$default_values) {
        if ($this->current->instance) {
            $draftitemid = file_get_submitted_draft_itemid('input_pdf');
            file_prepare_draft_area($draftitemid, $this->context->id, 'mod_pdfsec', 'input_pdf',
                    0, array('subdirs' => false));
            $default_values['input_pdf'] = $draftitemid;
        }
        if (isset($default_values['settings'])) {
            foreach (json_decode($default_values['settings'], true) as $k => $v) {
                $default_values[$k] = $v;
            }
        }
    }

    private function set_global_defaults($default_values) {
        if (is_object($default_values)) {
            $default_values = (array) $default_values;
        }
        $default_values['first_page_global'] = get_config('mod_pdfsec', 'firstpage');
        $default_values['last_page_global'] = get_config('mod_pdfsec', 'lastpage');
        $default_values['watermark_global'] = get_config('mod_pdfsec', 'watermark');

        $default_values['subject_global'] = get_config('mod_pdfsec', 'subject');
        $default_values['keywords_global'] = get_config('mod_pdfsec', 'keywords');
        $default_values['author_global'] = get_config('mod_pdfsec', 'author');
        $default_values['language_global'] = get_config('mod_pdfsec', 'language');

        $default_values['perm_print_global'] = get_config('mod_pdfsec', 'perm_print');
        $default_values['perm_modify_global'] = get_config('mod_pdfsec', 'perm_modify');
        $default_values['perm_extract_global'] = get_config('mod_pdfsec', 'perm_extract');
        $default_values['perm_copy_global'] = get_config('mod_pdfsec', 'perm_copy');
        $default_values['perm_assemble_global'] = get_config('mod_pdfsec', 'perm_assemble');
        return $default_values;
    }

    public function set_data($default_values) {
        $default_values = $this->set_global_defaults($default_values);
        parent::set_data($default_values); // TODO: Change the autogenerated stub
    }

    protected function definition() {

        $mform = $this->_form;

        $mform->addElement('text', 'name', get_string('displayname', 'mod_pdfsec'));
        $mform->setType('name', PARAM_ALPHANUMEXT);
        $mform->addElement('filemanager', 'input_pdf', get_string('input_pdf', 'mod_pdfsec'), null,
                array('subdirs' => 0, 'maxbytes' => 10485760, 'areamaxbytes' => 10485760, 'maxfiles' => 1,
                        'accepted_types' => array('.pdf'), 'return_types' => FILE_INTERNAL | FILE_EXTERNAL));

        $this->define_shared_fields();

        $this->standard_coursemodule_elements();

        $this->add_action_buttons();

    }
}